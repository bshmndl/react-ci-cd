name: Test and build
on:
    push:
        branches:
            - main
            - 'feature/**'
        paths-ignore:
            - '.github/workflows/*'  
            - README.md  
    pull_request:
      types: [opened, synchronize, reopened]        
    workflow_dispatch:        
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v4
            - name: Install Node 20
              uses: actions/setup-node@v4
              with: 
                node-version: 20
            - name: Cache Dependencies
              uses: actions/cache@v4
              with: 
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            - name: Install Dependencies
              run: npm ci 
            - name: Run Tests
              run: npm run test
    SonarCloud:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    build:  
        needs: test
        continue-on-error: true
        strategy:
          matrix:
            node-version: [12, 14, 16, 20]
            operating-system: [ubuntu-latest, windows-latest]
            include:
              - node-version: 18
                operating-system: ubuntu-latest
            exclude:
              - node-version: 12
                operating-system: windows-latest
        runs-on: ${{ matrix.operating-system }}  
        steps:
          - name: Get Code
            uses: actions/checkout@v4
          - name: Install Node 
            uses: actions/setup-node@v4
            with: 
              node-version: ${{ matrix.node-version }}
          - name: Cache Dependencies
            uses: actions/cache@v4
            with: 
              path: ~/.npm
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          - name: Install Dependencies
            run: npm ci 
          - name: Build Project
            run: npm run build  
          - name: Upload Dist Artifact
            uses: actions/upload-artifact@v4
            with:
                name: dist-files
                path: dist
         # Docker login
          - name: Log in to Docker Hub
            uses: docker/login-action@v2
            with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}                
         # Build Docker image
          - name: Build Docker image
            run: |
              docker build -t ${{ secrets.DOCKER_USERNAME }}/react-app:latest .
                    
          # Push Docker image to Docker Hub
          - name: Push Docker image
            run: |
              docker push ${{ secrets.DOCKER_USERNAME }}/react-app:latest      
             
    Verify_build:
        needs: build
        runs-on: ubuntu-latest
        steps:

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            
            
            # Run the Docker container locally for testing
            - name: Run Docker container
              run: |
                docker run -d -p 80:5173 --name react-app-test ${{ secrets.DOCKER_USERNAME }}/react-app:latest
            
            # Test container health (optional, if healthcheck is defined)
            - name: Test container health
              run: |
                sleep 10 # Wait for the container to be ready
                curl -f http://localhost || exit 1
            
            # Stop and remove the test container
            - name: Cleanup
              run: |
                docker stop react-app-test && docker rm react-app-test
